### YamlMime:ManagedReference
items:
- uid: FitnessTracker.Controllers.NewFoodModel
  commentId: T:FitnessTracker.Controllers.NewFoodModel
  id: NewFoodModel
  parent: FitnessTracker.Controllers
  children:
  - FitnessTracker.Controllers.NewFoodModel.FoodRecords
  - FitnessTracker.Controllers.NewFoodModel.UserFoods
  langs:
  - csharp
  - vb
  name: NewFoodModel
  nameWithType: NewFoodModel
  fullName: FitnessTracker.Controllers.NewFoodModel
  type: Class
  source:
    remote:
      path: Controllers/NutritionController.cs
      branch: main
      repo: https://github.com/SwarupaPedapalli/FitnessTrack.git
    id: NewFoodModel
    path: Controllers/NutritionController.cs
    startLine: 14
  assemblies:
  - FitnessTracker
  namespace: FitnessTracker.Controllers
  syntax:
    content: public class NewFoodModel
    content.vb: Public Class NewFoodModel
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: FitnessTracker.Controllers.NewFoodModel.UserFoods
  commentId: P:FitnessTracker.Controllers.NewFoodModel.UserFoods
  id: UserFoods
  parent: FitnessTracker.Controllers.NewFoodModel
  langs:
  - csharp
  - vb
  name: UserFoods
  nameWithType: NewFoodModel.UserFoods
  fullName: FitnessTracker.Controllers.NewFoodModel.UserFoods
  type: Property
  source:
    remote:
      path: Controllers/NutritionController.cs
      branch: main
      repo: https://github.com/SwarupaPedapalli/FitnessTrack.git
    id: UserFoods
    path: Controllers/NutritionController.cs
    startLine: 16
  assemblies:
  - FitnessTracker
  namespace: FitnessTracker.Controllers
  syntax:
    content: public Food[] UserFoods { get; set; }
    parameters: []
    return:
      type: FitnessTracker.Models.Food[]
    content.vb: Public Property UserFoods As Food()
  overload: FitnessTracker.Controllers.NewFoodModel.UserFoods*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: FitnessTracker.Controllers.NewFoodModel.FoodRecords
  commentId: P:FitnessTracker.Controllers.NewFoodModel.FoodRecords
  id: FoodRecords
  parent: FitnessTracker.Controllers.NewFoodModel
  langs:
  - csharp
  - vb
  name: FoodRecords
  nameWithType: NewFoodModel.FoodRecords
  fullName: FitnessTracker.Controllers.NewFoodModel.FoodRecords
  type: Property
  source:
    remote:
      path: Controllers/NutritionController.cs
      branch: main
      repo: https://github.com/SwarupaPedapalli/FitnessTrack.git
    id: FoodRecords
    path: Controllers/NutritionController.cs
    startLine: 17
  assemblies:
  - FitnessTracker
  namespace: FitnessTracker.Controllers
  syntax:
    content: public FoodRecord[] FoodRecords { get; set; }
    parameters: []
    return:
      type: FitnessTracker.Models.FoodRecord[]
    content.vb: Public Property FoodRecords As FoodRecord()
  overload: FitnessTracker.Controllers.NewFoodModel.FoodRecords*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: FitnessTracker.Controllers
  commentId: N:FitnessTracker.Controllers
  name: FitnessTracker.Controllers
  nameWithType: FitnessTracker.Controllers
  fullName: FitnessTracker.Controllers
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: FitnessTracker.Controllers.NewFoodModel.UserFoods*
  commentId: Overload:FitnessTracker.Controllers.NewFoodModel.UserFoods
  name: UserFoods
  nameWithType: NewFoodModel.UserFoods
  fullName: FitnessTracker.Controllers.NewFoodModel.UserFoods
- uid: FitnessTracker.Models.Food[]
  isExternal: true
  name: Food[]
  nameWithType: Food[]
  fullName: FitnessTracker.Models.Food[]
  nameWithType.vb: Food()
  fullName.vb: FitnessTracker.Models.Food()
  name.vb: Food()
  spec.csharp:
  - uid: FitnessTracker.Models.Food
    name: Food
    nameWithType: Food
    fullName: FitnessTracker.Models.Food
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: FitnessTracker.Models.Food
    name: Food
    nameWithType: Food
    fullName: FitnessTracker.Models.Food
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: FitnessTracker.Controllers.NewFoodModel.FoodRecords*
  commentId: Overload:FitnessTracker.Controllers.NewFoodModel.FoodRecords
  name: FoodRecords
  nameWithType: NewFoodModel.FoodRecords
  fullName: FitnessTracker.Controllers.NewFoodModel.FoodRecords
- uid: FitnessTracker.Models.FoodRecord[]
  isExternal: true
  name: FoodRecord[]
  nameWithType: FoodRecord[]
  fullName: FitnessTracker.Models.FoodRecord[]
  nameWithType.vb: FoodRecord()
  fullName.vb: FitnessTracker.Models.FoodRecord()
  name.vb: FoodRecord()
  spec.csharp:
  - uid: FitnessTracker.Models.FoodRecord
    name: FoodRecord
    nameWithType: FoodRecord
    fullName: FitnessTracker.Models.FoodRecord
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: FitnessTracker.Models.FoodRecord
    name: FoodRecord
    nameWithType: FoodRecord
    fullName: FitnessTracker.Models.FoodRecord
  - name: ()
    nameWithType: ()
    fullName: ()
