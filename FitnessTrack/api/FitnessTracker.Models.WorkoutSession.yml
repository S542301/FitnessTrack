### YamlMime:ManagedReference
items:
- uid: FitnessTracker.Models.WorkoutSession
  commentId: T:FitnessTracker.Models.WorkoutSession
  id: WorkoutSession
  parent: FitnessTracker.Models
  children:
  - FitnessTracker.Models.WorkoutSession.Activities
  - FitnessTracker.Models.WorkoutSession.DayNumber
  - FitnessTracker.Models.WorkoutSession.Name
  langs:
  - csharp
  - vb
  name: WorkoutSession
  nameWithType: WorkoutSession
  fullName: FitnessTracker.Models.WorkoutSession
  type: Class
  source:
    remote:
      path: Models/WorkoutSession.cs
      branch: main
      repo: https://github.com/SwarupaPedapalli/FitnessTrack.git
    id: WorkoutSession
    path: Models/WorkoutSession.cs
    startLine: 8
  assemblies:
  - FitnessTracker
  namespace: FitnessTracker.Models
  syntax:
    content: public class WorkoutSession
    content.vb: Public Class WorkoutSession
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: FitnessTracker.Models.WorkoutSession.Name
  commentId: P:FitnessTracker.Models.WorkoutSession.Name
  id: Name
  parent: FitnessTracker.Models.WorkoutSession
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: WorkoutSession.Name
  fullName: FitnessTracker.Models.WorkoutSession.Name
  type: Property
  source:
    remote:
      path: Models/WorkoutSession.cs
      branch: main
      repo: https://github.com/SwarupaPedapalli/FitnessTrack.git
    id: Name
    path: Models/WorkoutSession.cs
    startLine: 10
  assemblies:
  - FitnessTracker
  namespace: FitnessTracker.Models
  syntax:
    content: >-
      [Required]

      [MaxLength(30)]

      public string Name { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <Required>

      <MaxLength(30)>

      Public Property Name As String
  overload: FitnessTracker.Models.WorkoutSession.Name*
  attributes:
  - type: System.ComponentModel.DataAnnotations.RequiredAttribute
    ctor: System.ComponentModel.DataAnnotations.RequiredAttribute.#ctor
    arguments: []
  - type: System.ComponentModel.DataAnnotations.MaxLengthAttribute
    ctor: System.ComponentModel.DataAnnotations.MaxLengthAttribute.#ctor(System.Int32)
    arguments:
    - type: System.Int32
      value: 30
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: FitnessTracker.Models.WorkoutSession.DayNumber
  commentId: P:FitnessTracker.Models.WorkoutSession.DayNumber
  id: DayNumber
  parent: FitnessTracker.Models.WorkoutSession
  langs:
  - csharp
  - vb
  name: DayNumber
  nameWithType: WorkoutSession.DayNumber
  fullName: FitnessTracker.Models.WorkoutSession.DayNumber
  type: Property
  source:
    remote:
      path: Models/WorkoutSession.cs
      branch: main
      repo: https://github.com/SwarupaPedapalli/FitnessTrack.git
    id: DayNumber
    path: Models/WorkoutSession.cs
    startLine: 13
  assemblies:
  - FitnessTracker
  namespace: FitnessTracker.Models
  syntax:
    content: >-
      [Required]

      [Range(1, 28)]

      public int DayNumber { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: >-
      <Required>

      <Range(1, 28)>

      Public Property DayNumber As Integer
  overload: FitnessTracker.Models.WorkoutSession.DayNumber*
  attributes:
  - type: System.ComponentModel.DataAnnotations.RequiredAttribute
    ctor: System.ComponentModel.DataAnnotations.RequiredAttribute.#ctor
    arguments: []
  - type: System.ComponentModel.DataAnnotations.RangeAttribute
    ctor: System.ComponentModel.DataAnnotations.RangeAttribute.#ctor(System.Int32,System.Int32)
    arguments:
    - type: System.Int32
      value: 1
    - type: System.Int32
      value: 28
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: FitnessTracker.Models.WorkoutSession.Activities
  commentId: P:FitnessTracker.Models.WorkoutSession.Activities
  id: Activities
  parent: FitnessTracker.Models.WorkoutSession
  langs:
  - csharp
  - vb
  name: Activities
  nameWithType: WorkoutSession.Activities
  fullName: FitnessTracker.Models.WorkoutSession.Activities
  type: Property
  source:
    remote:
      path: Models/WorkoutSession.cs
      branch: main
      repo: https://github.com/SwarupaPedapalli/FitnessTrack.git
    id: Activities
    path: Models/WorkoutSession.cs
    startLine: 17
  assemblies:
  - FitnessTracker
  namespace: FitnessTracker.Models
  syntax:
    content: public WorkoutActivity[] Activities { get; set; }
    parameters: []
    return:
      type: FitnessTracker.Models.WorkoutActivity[]
    content.vb: Public Property Activities As WorkoutActivity()
  overload: FitnessTracker.Models.WorkoutSession.Activities*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: FitnessTracker.Models
  commentId: N:FitnessTracker.Models
  name: FitnessTracker.Models
  nameWithType: FitnessTracker.Models
  fullName: FitnessTracker.Models
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: FitnessTracker.Models.WorkoutSession.Name*
  commentId: Overload:FitnessTracker.Models.WorkoutSession.Name
  name: Name
  nameWithType: WorkoutSession.Name
  fullName: FitnessTracker.Models.WorkoutSession.Name
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: FitnessTracker.Models.WorkoutSession.DayNumber*
  commentId: Overload:FitnessTracker.Models.WorkoutSession.DayNumber
  name: DayNumber
  nameWithType: WorkoutSession.DayNumber
  fullName: FitnessTracker.Models.WorkoutSession.DayNumber
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: FitnessTracker.Models.WorkoutSession.Activities*
  commentId: Overload:FitnessTracker.Models.WorkoutSession.Activities
  name: Activities
  nameWithType: WorkoutSession.Activities
  fullName: FitnessTracker.Models.WorkoutSession.Activities
- uid: FitnessTracker.Models.WorkoutActivity[]
  isExternal: true
  name: WorkoutActivity[]
  nameWithType: WorkoutActivity[]
  fullName: FitnessTracker.Models.WorkoutActivity[]
  nameWithType.vb: WorkoutActivity()
  fullName.vb: FitnessTracker.Models.WorkoutActivity()
  name.vb: WorkoutActivity()
  spec.csharp:
  - uid: FitnessTracker.Models.WorkoutActivity
    name: WorkoutActivity
    nameWithType: WorkoutActivity
    fullName: FitnessTracker.Models.WorkoutActivity
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: FitnessTracker.Models.WorkoutActivity
    name: WorkoutActivity
    nameWithType: WorkoutActivity
    fullName: FitnessTracker.Models.WorkoutActivity
  - name: ()
    nameWithType: ()
    fullName: ()
