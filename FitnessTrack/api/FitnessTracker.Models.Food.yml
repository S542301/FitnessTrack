### YamlMime:ManagedReference
items:
- uid: FitnessTracker.Models.Food
  commentId: T:FitnessTracker.Models.Food
  id: Food
  parent: FitnessTracker.Models
  children:
  - FitnessTracker.Models.Food.Calories
  - FitnessTracker.Models.Food.Carbohydrates
  - FitnessTracker.Models.Food.CreatedBy
  - FitnessTracker.Models.Food.CreatedByID
  - FitnessTracker.Models.Food.Fat
  - FitnessTracker.Models.Food.ID
  - FitnessTracker.Models.Food.Name
  - FitnessTracker.Models.Food.Protein
  - FitnessTracker.Models.Food.ServingSize
  - FitnessTracker.Models.Food.ServingUnit
  langs:
  - csharp
  - vb
  name: Food
  nameWithType: Food
  fullName: FitnessTracker.Models.Food
  type: Class
  source:
    remote:
      path: Models/Food.cs
      branch: main
      repo: https://github.com/SwarupaPedapalli/FitnessTrack.git
    id: Food
    path: Models/Food.cs
    startLine: 9
  assemblies:
  - FitnessTracker
  namespace: FitnessTracker.Models
  syntax:
    content: public class Food
    content.vb: Public Class Food
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: FitnessTracker.Models.Food.ID
  commentId: P:FitnessTracker.Models.Food.ID
  id: ID
  parent: FitnessTracker.Models.Food
  langs:
  - csharp
  - vb
  name: ID
  nameWithType: Food.ID
  fullName: FitnessTracker.Models.Food.ID
  type: Property
  source:
    remote:
      path: Models/Food.cs
      branch: main
      repo: https://github.com/SwarupaPedapalli/FitnessTrack.git
    id: ID
    path: Models/Food.cs
    startLine: 11
  assemblies:
  - FitnessTracker
  namespace: FitnessTracker.Models
  syntax:
    content: public long ID { get; set; }
    parameters: []
    return:
      type: System.Int64
    content.vb: Public Property ID As Long
  overload: FitnessTracker.Models.Food.ID*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: FitnessTracker.Models.Food.CreatedByID
  commentId: P:FitnessTracker.Models.Food.CreatedByID
  id: CreatedByID
  parent: FitnessTracker.Models.Food
  langs:
  - csharp
  - vb
  name: CreatedByID
  nameWithType: Food.CreatedByID
  fullName: FitnessTracker.Models.Food.CreatedByID
  type: Property
  source:
    remote:
      path: Models/Food.cs
      branch: main
      repo: https://github.com/SwarupaPedapalli/FitnessTrack.git
    id: CreatedByID
    path: Models/Food.cs
    startLine: 12
  assemblies:
  - FitnessTracker
  namespace: FitnessTracker.Models
  syntax:
    content: >-
      [Required]

      [ForeignKey("CreatedBy")]

      public string CreatedByID { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <Required>

      <ForeignKey("CreatedBy")>

      Public Property CreatedByID As String
  overload: FitnessTracker.Models.Food.CreatedByID*
  attributes:
  - type: System.ComponentModel.DataAnnotations.RequiredAttribute
    ctor: System.ComponentModel.DataAnnotations.RequiredAttribute.#ctor
    arguments: []
  - type: System.ComponentModel.DataAnnotations.Schema.ForeignKeyAttribute
    ctor: System.ComponentModel.DataAnnotations.Schema.ForeignKeyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: CreatedBy
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: FitnessTracker.Models.Food.CreatedBy
  commentId: P:FitnessTracker.Models.Food.CreatedBy
  id: CreatedBy
  parent: FitnessTracker.Models.Food
  langs:
  - csharp
  - vb
  name: CreatedBy
  nameWithType: Food.CreatedBy
  fullName: FitnessTracker.Models.Food.CreatedBy
  type: Property
  source:
    remote:
      path: Models/Food.cs
      branch: main
      repo: https://github.com/SwarupaPedapalli/FitnessTrack.git
    id: CreatedBy
    path: Models/Food.cs
    startLine: 15
  assemblies:
  - FitnessTracker
  namespace: FitnessTracker.Models
  syntax:
    content: public FitnessUser CreatedBy { get; set; }
    parameters: []
    return:
      type: FitnessTracker.Models.FitnessUser
    content.vb: Public Property CreatedBy As FitnessUser
  overload: FitnessTracker.Models.Food.CreatedBy*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: FitnessTracker.Models.Food.Name
  commentId: P:FitnessTracker.Models.Food.Name
  id: Name
  parent: FitnessTracker.Models.Food
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: Food.Name
  fullName: FitnessTracker.Models.Food.Name
  type: Property
  source:
    remote:
      path: Models/Food.cs
      branch: main
      repo: https://github.com/SwarupaPedapalli/FitnessTrack.git
    id: Name
    path: Models/Food.cs
    startLine: 17
  assemblies:
  - FitnessTracker
  namespace: FitnessTracker.Models
  syntax:
    content: >-
      [Required]

      public string Name { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <Required>

      Public Property Name As String
  overload: FitnessTracker.Models.Food.Name*
  attributes:
  - type: System.ComponentModel.DataAnnotations.RequiredAttribute
    ctor: System.ComponentModel.DataAnnotations.RequiredAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: FitnessTracker.Models.Food.Calories
  commentId: P:FitnessTracker.Models.Food.Calories
  id: Calories
  parent: FitnessTracker.Models.Food
  langs:
  - csharp
  - vb
  name: Calories
  nameWithType: Food.Calories
  fullName: FitnessTracker.Models.Food.Calories
  type: Property
  source:
    remote:
      path: Models/Food.cs
      branch: main
      repo: https://github.com/SwarupaPedapalli/FitnessTrack.git
    id: Calories
    path: Models/Food.cs
    startLine: 19
  assemblies:
  - FitnessTracker
  namespace: FitnessTracker.Models
  syntax:
    content: >-
      [Required]

      [Range(0, 2147483647)]

      public int Calories { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: >-
      <Required>

      <Range(0, 2147483647)>

      Public Property Calories As Integer
  overload: FitnessTracker.Models.Food.Calories*
  attributes:
  - type: System.ComponentModel.DataAnnotations.RequiredAttribute
    ctor: System.ComponentModel.DataAnnotations.RequiredAttribute.#ctor
    arguments: []
  - type: System.ComponentModel.DataAnnotations.RangeAttribute
    ctor: System.ComponentModel.DataAnnotations.RangeAttribute.#ctor(System.Int32,System.Int32)
    arguments:
    - type: System.Int32
      value: 0
    - type: System.Int32
      value: 2147483647
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: FitnessTracker.Models.Food.Carbohydrates
  commentId: P:FitnessTracker.Models.Food.Carbohydrates
  id: Carbohydrates
  parent: FitnessTracker.Models.Food
  langs:
  - csharp
  - vb
  name: Carbohydrates
  nameWithType: Food.Carbohydrates
  fullName: FitnessTracker.Models.Food.Carbohydrates
  type: Property
  source:
    remote:
      path: Models/Food.cs
      branch: main
      repo: https://github.com/SwarupaPedapalli/FitnessTrack.git
    id: Carbohydrates
    path: Models/Food.cs
    startLine: 22
  assemblies:
  - FitnessTracker
  namespace: FitnessTracker.Models
  syntax:
    content: >-
      [Required]

      [Range(0, 2147483647)]

      public int Carbohydrates { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: >-
      <Required>

      <Range(0, 2147483647)>

      Public Property Carbohydrates As Integer
  overload: FitnessTracker.Models.Food.Carbohydrates*
  attributes:
  - type: System.ComponentModel.DataAnnotations.RequiredAttribute
    ctor: System.ComponentModel.DataAnnotations.RequiredAttribute.#ctor
    arguments: []
  - type: System.ComponentModel.DataAnnotations.RangeAttribute
    ctor: System.ComponentModel.DataAnnotations.RangeAttribute.#ctor(System.Int32,System.Int32)
    arguments:
    - type: System.Int32
      value: 0
    - type: System.Int32
      value: 2147483647
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: FitnessTracker.Models.Food.Protein
  commentId: P:FitnessTracker.Models.Food.Protein
  id: Protein
  parent: FitnessTracker.Models.Food
  langs:
  - csharp
  - vb
  name: Protein
  nameWithType: Food.Protein
  fullName: FitnessTracker.Models.Food.Protein
  type: Property
  source:
    remote:
      path: Models/Food.cs
      branch: main
      repo: https://github.com/SwarupaPedapalli/FitnessTrack.git
    id: Protein
    path: Models/Food.cs
    startLine: 25
  assemblies:
  - FitnessTracker
  namespace: FitnessTracker.Models
  syntax:
    content: >-
      [Required]

      [Range(0, 2147483647)]

      public int Protein { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: >-
      <Required>

      <Range(0, 2147483647)>

      Public Property Protein As Integer
  overload: FitnessTracker.Models.Food.Protein*
  attributes:
  - type: System.ComponentModel.DataAnnotations.RequiredAttribute
    ctor: System.ComponentModel.DataAnnotations.RequiredAttribute.#ctor
    arguments: []
  - type: System.ComponentModel.DataAnnotations.RangeAttribute
    ctor: System.ComponentModel.DataAnnotations.RangeAttribute.#ctor(System.Int32,System.Int32)
    arguments:
    - type: System.Int32
      value: 0
    - type: System.Int32
      value: 2147483647
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: FitnessTracker.Models.Food.Fat
  commentId: P:FitnessTracker.Models.Food.Fat
  id: Fat
  parent: FitnessTracker.Models.Food
  langs:
  - csharp
  - vb
  name: Fat
  nameWithType: Food.Fat
  fullName: FitnessTracker.Models.Food.Fat
  type: Property
  source:
    remote:
      path: Models/Food.cs
      branch: main
      repo: https://github.com/SwarupaPedapalli/FitnessTrack.git
    id: Fat
    path: Models/Food.cs
    startLine: 28
  assemblies:
  - FitnessTracker
  namespace: FitnessTracker.Models
  syntax:
    content: >-
      [Required]

      [Range(0, 2147483647)]

      public int Fat { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: >-
      <Required>

      <Range(0, 2147483647)>

      Public Property Fat As Integer
  overload: FitnessTracker.Models.Food.Fat*
  attributes:
  - type: System.ComponentModel.DataAnnotations.RequiredAttribute
    ctor: System.ComponentModel.DataAnnotations.RequiredAttribute.#ctor
    arguments: []
  - type: System.ComponentModel.DataAnnotations.RangeAttribute
    ctor: System.ComponentModel.DataAnnotations.RangeAttribute.#ctor(System.Int32,System.Int32)
    arguments:
    - type: System.Int32
      value: 0
    - type: System.Int32
      value: 2147483647
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: FitnessTracker.Models.Food.ServingSize
  commentId: P:FitnessTracker.Models.Food.ServingSize
  id: ServingSize
  parent: FitnessTracker.Models.Food
  langs:
  - csharp
  - vb
  name: ServingSize
  nameWithType: Food.ServingSize
  fullName: FitnessTracker.Models.Food.ServingSize
  type: Property
  source:
    remote:
      path: Models/Food.cs
      branch: main
      repo: https://github.com/SwarupaPedapalli/FitnessTrack.git
    id: ServingSize
    path: Models/Food.cs
    startLine: 31
  assemblies:
  - FitnessTracker
  namespace: FitnessTracker.Models
  syntax:
    content: >-
      [Required]

      [Range(0, 2147483647)]

      public int ServingSize { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: >-
      <Required>

      <Range(0, 2147483647)>

      Public Property ServingSize As Integer
  overload: FitnessTracker.Models.Food.ServingSize*
  attributes:
  - type: System.ComponentModel.DataAnnotations.RequiredAttribute
    ctor: System.ComponentModel.DataAnnotations.RequiredAttribute.#ctor
    arguments: []
  - type: System.ComponentModel.DataAnnotations.RangeAttribute
    ctor: System.ComponentModel.DataAnnotations.RangeAttribute.#ctor(System.Int32,System.Int32)
    arguments:
    - type: System.Int32
      value: 0
    - type: System.Int32
      value: 2147483647
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: FitnessTracker.Models.Food.ServingUnit
  commentId: P:FitnessTracker.Models.Food.ServingUnit
  id: ServingUnit
  parent: FitnessTracker.Models.Food
  langs:
  - csharp
  - vb
  name: ServingUnit
  nameWithType: Food.ServingUnit
  fullName: FitnessTracker.Models.Food.ServingUnit
  type: Property
  source:
    remote:
      path: Models/Food.cs
      branch: main
      repo: https://github.com/SwarupaPedapalli/FitnessTrack.git
    id: ServingUnit
    path: Models/Food.cs
    startLine: 34
  assemblies:
  - FitnessTracker
  namespace: FitnessTracker.Models
  syntax:
    content: >-
      [Required]

      public ServingUnit ServingUnit { get; set; }
    parameters: []
    return:
      type: FitnessTracker.Models.ServingUnit
    content.vb: >-
      <Required>

      Public Property ServingUnit As ServingUnit
  overload: FitnessTracker.Models.Food.ServingUnit*
  attributes:
  - type: System.ComponentModel.DataAnnotations.RequiredAttribute
    ctor: System.ComponentModel.DataAnnotations.RequiredAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: FitnessTracker.Models
  commentId: N:FitnessTracker.Models
  name: FitnessTracker.Models
  nameWithType: FitnessTracker.Models
  fullName: FitnessTracker.Models
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: FitnessTracker.Models.Food.ID*
  commentId: Overload:FitnessTracker.Models.Food.ID
  name: ID
  nameWithType: Food.ID
  fullName: FitnessTracker.Models.Food.ID
- uid: System.Int64
  commentId: T:System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: FitnessTracker.Models.Food.CreatedByID*
  commentId: Overload:FitnessTracker.Models.Food.CreatedByID
  name: CreatedByID
  nameWithType: Food.CreatedByID
  fullName: FitnessTracker.Models.Food.CreatedByID
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: FitnessTracker.Models.Food.CreatedBy*
  commentId: Overload:FitnessTracker.Models.Food.CreatedBy
  name: CreatedBy
  nameWithType: Food.CreatedBy
  fullName: FitnessTracker.Models.Food.CreatedBy
- uid: FitnessTracker.Models.FitnessUser
  commentId: T:FitnessTracker.Models.FitnessUser
  parent: FitnessTracker.Models
  name: FitnessUser
  nameWithType: FitnessUser
  fullName: FitnessTracker.Models.FitnessUser
- uid: FitnessTracker.Models.Food.Name*
  commentId: Overload:FitnessTracker.Models.Food.Name
  name: Name
  nameWithType: Food.Name
  fullName: FitnessTracker.Models.Food.Name
- uid: FitnessTracker.Models.Food.Calories*
  commentId: Overload:FitnessTracker.Models.Food.Calories
  name: Calories
  nameWithType: Food.Calories
  fullName: FitnessTracker.Models.Food.Calories
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: FitnessTracker.Models.Food.Carbohydrates*
  commentId: Overload:FitnessTracker.Models.Food.Carbohydrates
  name: Carbohydrates
  nameWithType: Food.Carbohydrates
  fullName: FitnessTracker.Models.Food.Carbohydrates
- uid: FitnessTracker.Models.Food.Protein*
  commentId: Overload:FitnessTracker.Models.Food.Protein
  name: Protein
  nameWithType: Food.Protein
  fullName: FitnessTracker.Models.Food.Protein
- uid: FitnessTracker.Models.Food.Fat*
  commentId: Overload:FitnessTracker.Models.Food.Fat
  name: Fat
  nameWithType: Food.Fat
  fullName: FitnessTracker.Models.Food.Fat
- uid: FitnessTracker.Models.Food.ServingSize*
  commentId: Overload:FitnessTracker.Models.Food.ServingSize
  name: ServingSize
  nameWithType: Food.ServingSize
  fullName: FitnessTracker.Models.Food.ServingSize
- uid: FitnessTracker.Models.Food.ServingUnit*
  commentId: Overload:FitnessTracker.Models.Food.ServingUnit
  name: ServingUnit
  nameWithType: Food.ServingUnit
  fullName: FitnessTracker.Models.Food.ServingUnit
- uid: FitnessTracker.Models.ServingUnit
  commentId: T:FitnessTracker.Models.ServingUnit
  parent: FitnessTracker.Models
  name: ServingUnit
  nameWithType: ServingUnit
  fullName: FitnessTracker.Models.ServingUnit
