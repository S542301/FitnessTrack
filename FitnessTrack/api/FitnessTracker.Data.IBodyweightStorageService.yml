### YamlMime:ManagedReference
items:
- uid: FitnessTracker.Data.IBodyweightStorageService
  commentId: T:FitnessTracker.Data.IBodyweightStorageService
  id: IBodyweightStorageService
  parent: FitnessTracker.Data
  children:
  - FitnessTracker.Data.IBodyweightStorageService.DeleteExistingRecords(FitnessTracker.Models.FitnessUser)
  - FitnessTracker.Data.IBodyweightStorageService.GetBodyweightRecords(FitnessTracker.Models.FitnessUser,System.Boolean)
  - FitnessTracker.Data.IBodyweightStorageService.GetBodyweightTarget(FitnessTracker.Models.FitnessUser)
  - FitnessTracker.Data.IBodyweightStorageService.StoreBodyweightRecord(FitnessTracker.Models.BodyweightRecord)
  - FitnessTracker.Data.IBodyweightStorageService.StoreBodyweightRecords(System.Collections.Generic.IEnumerable{FitnessTracker.Models.BodyweightRecord})
  - FitnessTracker.Data.IBodyweightStorageService.StoreBodyweightTarget(FitnessTracker.Models.BodyweightTarget)
  langs:
  - csharp
  - vb
  name: IBodyweightStorageService
  nameWithType: IBodyweightStorageService
  fullName: FitnessTracker.Data.IBodyweightStorageService
  type: Interface
  source:
    remote:
      path: Data/IBodyweightStorageService.cs
      branch: main
      repo: https://github.com/SwarupaPedapalli/FitnessTrack.git
    id: IBodyweightStorageService
    path: Data/IBodyweightStorageService.cs
    startLine: 8
  assemblies:
  - FitnessTracker
  namespace: FitnessTracker.Data
  syntax:
    content: public interface IBodyweightStorageService
    content.vb: Public Interface IBodyweightStorageService
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: FitnessTracker.Data.IBodyweightStorageService.GetBodyweightRecords(FitnessTracker.Models.FitnessUser,System.Boolean)
  commentId: M:FitnessTracker.Data.IBodyweightStorageService.GetBodyweightRecords(FitnessTracker.Models.FitnessUser,System.Boolean)
  id: GetBodyweightRecords(FitnessTracker.Models.FitnessUser,System.Boolean)
  parent: FitnessTracker.Data.IBodyweightStorageService
  langs:
  - csharp
  - vb
  name: GetBodyweightRecords(FitnessUser, Boolean)
  nameWithType: IBodyweightStorageService.GetBodyweightRecords(FitnessUser, Boolean)
  fullName: FitnessTracker.Data.IBodyweightStorageService.GetBodyweightRecords(FitnessTracker.Models.FitnessUser, System.Boolean)
  type: Method
  source:
    remote:
      path: Data/IBodyweightStorageService.cs
      branch: main
      repo: https://github.com/SwarupaPedapalli/FitnessTrack.git
    id: GetBodyweightRecords
    path: Data/IBodyweightStorageService.cs
    startLine: 10
  assemblies:
  - FitnessTracker
  namespace: FitnessTracker.Data
  syntax:
    content: Task<BodyweightRecord[]> GetBodyweightRecords(FitnessUser User, bool AscendingOrder = false)
    parameters:
    - id: User
      type: FitnessTracker.Models.FitnessUser
    - id: AscendingOrder
      type: System.Boolean
    return:
      type: System.Threading.Tasks.Task{FitnessTracker.Models.BodyweightRecord[]}
    content.vb: Function GetBodyweightRecords(User As FitnessUser, AscendingOrder As Boolean = False) As Task(Of BodyweightRecord())
  overload: FitnessTracker.Data.IBodyweightStorageService.GetBodyweightRecords*
- uid: FitnessTracker.Data.IBodyweightStorageService.GetBodyweightTarget(FitnessTracker.Models.FitnessUser)
  commentId: M:FitnessTracker.Data.IBodyweightStorageService.GetBodyweightTarget(FitnessTracker.Models.FitnessUser)
  id: GetBodyweightTarget(FitnessTracker.Models.FitnessUser)
  parent: FitnessTracker.Data.IBodyweightStorageService
  langs:
  - csharp
  - vb
  name: GetBodyweightTarget(FitnessUser)
  nameWithType: IBodyweightStorageService.GetBodyweightTarget(FitnessUser)
  fullName: FitnessTracker.Data.IBodyweightStorageService.GetBodyweightTarget(FitnessTracker.Models.FitnessUser)
  type: Method
  source:
    remote:
      path: Data/IBodyweightStorageService.cs
      branch: main
      repo: https://github.com/SwarupaPedapalli/FitnessTrack.git
    id: GetBodyweightTarget
    path: Data/IBodyweightStorageService.cs
    startLine: 11
  assemblies:
  - FitnessTracker
  namespace: FitnessTracker.Data
  syntax:
    content: Task<BodyweightTarget> GetBodyweightTarget(FitnessUser User)
    parameters:
    - id: User
      type: FitnessTracker.Models.FitnessUser
    return:
      type: System.Threading.Tasks.Task{FitnessTracker.Models.BodyweightTarget}
    content.vb: Function GetBodyweightTarget(User As FitnessUser) As Task(Of BodyweightTarget)
  overload: FitnessTracker.Data.IBodyweightStorageService.GetBodyweightTarget*
- uid: FitnessTracker.Data.IBodyweightStorageService.StoreBodyweightRecord(FitnessTracker.Models.BodyweightRecord)
  commentId: M:FitnessTracker.Data.IBodyweightStorageService.StoreBodyweightRecord(FitnessTracker.Models.BodyweightRecord)
  id: StoreBodyweightRecord(FitnessTracker.Models.BodyweightRecord)
  parent: FitnessTracker.Data.IBodyweightStorageService
  langs:
  - csharp
  - vb
  name: StoreBodyweightRecord(BodyweightRecord)
  nameWithType: IBodyweightStorageService.StoreBodyweightRecord(BodyweightRecord)
  fullName: FitnessTracker.Data.IBodyweightStorageService.StoreBodyweightRecord(FitnessTracker.Models.BodyweightRecord)
  type: Method
  source:
    remote:
      path: Data/IBodyweightStorageService.cs
      branch: main
      repo: https://github.com/SwarupaPedapalli/FitnessTrack.git
    id: StoreBodyweightRecord
    path: Data/IBodyweightStorageService.cs
    startLine: 12
  assemblies:
  - FitnessTracker
  namespace: FitnessTracker.Data
  syntax:
    content: Task StoreBodyweightRecord(BodyweightRecord Record)
    parameters:
    - id: Record
      type: FitnessTracker.Models.BodyweightRecord
    return:
      type: System.Threading.Tasks.Task
    content.vb: Function StoreBodyweightRecord(Record As BodyweightRecord) As Task
  overload: FitnessTracker.Data.IBodyweightStorageService.StoreBodyweightRecord*
- uid: FitnessTracker.Data.IBodyweightStorageService.StoreBodyweightRecords(System.Collections.Generic.IEnumerable{FitnessTracker.Models.BodyweightRecord})
  commentId: M:FitnessTracker.Data.IBodyweightStorageService.StoreBodyweightRecords(System.Collections.Generic.IEnumerable{FitnessTracker.Models.BodyweightRecord})
  id: StoreBodyweightRecords(System.Collections.Generic.IEnumerable{FitnessTracker.Models.BodyweightRecord})
  parent: FitnessTracker.Data.IBodyweightStorageService
  langs:
  - csharp
  - vb
  name: StoreBodyweightRecords(IEnumerable<BodyweightRecord>)
  nameWithType: IBodyweightStorageService.StoreBodyweightRecords(IEnumerable<BodyweightRecord>)
  fullName: FitnessTracker.Data.IBodyweightStorageService.StoreBodyweightRecords(System.Collections.Generic.IEnumerable<FitnessTracker.Models.BodyweightRecord>)
  type: Method
  source:
    remote:
      path: Data/IBodyweightStorageService.cs
      branch: main
      repo: https://github.com/SwarupaPedapalli/FitnessTrack.git
    id: StoreBodyweightRecords
    path: Data/IBodyweightStorageService.cs
    startLine: 13
  assemblies:
  - FitnessTracker
  namespace: FitnessTracker.Data
  syntax:
    content: Task StoreBodyweightRecords(IEnumerable<BodyweightRecord> Records)
    parameters:
    - id: Records
      type: System.Collections.Generic.IEnumerable{FitnessTracker.Models.BodyweightRecord}
    return:
      type: System.Threading.Tasks.Task
    content.vb: Function StoreBodyweightRecords(Records As IEnumerable(Of BodyweightRecord)) As Task
  overload: FitnessTracker.Data.IBodyweightStorageService.StoreBodyweightRecords*
  nameWithType.vb: IBodyweightStorageService.StoreBodyweightRecords(IEnumerable(Of BodyweightRecord))
  fullName.vb: FitnessTracker.Data.IBodyweightStorageService.StoreBodyweightRecords(System.Collections.Generic.IEnumerable(Of FitnessTracker.Models.BodyweightRecord))
  name.vb: StoreBodyweightRecords(IEnumerable(Of BodyweightRecord))
- uid: FitnessTracker.Data.IBodyweightStorageService.DeleteExistingRecords(FitnessTracker.Models.FitnessUser)
  commentId: M:FitnessTracker.Data.IBodyweightStorageService.DeleteExistingRecords(FitnessTracker.Models.FitnessUser)
  id: DeleteExistingRecords(FitnessTracker.Models.FitnessUser)
  parent: FitnessTracker.Data.IBodyweightStorageService
  langs:
  - csharp
  - vb
  name: DeleteExistingRecords(FitnessUser)
  nameWithType: IBodyweightStorageService.DeleteExistingRecords(FitnessUser)
  fullName: FitnessTracker.Data.IBodyweightStorageService.DeleteExistingRecords(FitnessTracker.Models.FitnessUser)
  type: Method
  source:
    remote:
      path: Data/IBodyweightStorageService.cs
      branch: main
      repo: https://github.com/SwarupaPedapalli/FitnessTrack.git
    id: DeleteExistingRecords
    path: Data/IBodyweightStorageService.cs
    startLine: 14
  assemblies:
  - FitnessTracker
  namespace: FitnessTracker.Data
  syntax:
    content: Task DeleteExistingRecords(FitnessUser User)
    parameters:
    - id: User
      type: FitnessTracker.Models.FitnessUser
    return:
      type: System.Threading.Tasks.Task
    content.vb: Function DeleteExistingRecords(User As FitnessUser) As Task
  overload: FitnessTracker.Data.IBodyweightStorageService.DeleteExistingRecords*
- uid: FitnessTracker.Data.IBodyweightStorageService.StoreBodyweightTarget(FitnessTracker.Models.BodyweightTarget)
  commentId: M:FitnessTracker.Data.IBodyweightStorageService.StoreBodyweightTarget(FitnessTracker.Models.BodyweightTarget)
  id: StoreBodyweightTarget(FitnessTracker.Models.BodyweightTarget)
  parent: FitnessTracker.Data.IBodyweightStorageService
  langs:
  - csharp
  - vb
  name: StoreBodyweightTarget(BodyweightTarget)
  nameWithType: IBodyweightStorageService.StoreBodyweightTarget(BodyweightTarget)
  fullName: FitnessTracker.Data.IBodyweightStorageService.StoreBodyweightTarget(FitnessTracker.Models.BodyweightTarget)
  type: Method
  source:
    remote:
      path: Data/IBodyweightStorageService.cs
      branch: main
      repo: https://github.com/SwarupaPedapalli/FitnessTrack.git
    id: StoreBodyweightTarget
    path: Data/IBodyweightStorageService.cs
    startLine: 15
  assemblies:
  - FitnessTracker
  namespace: FitnessTracker.Data
  syntax:
    content: Task StoreBodyweightTarget(BodyweightTarget Target)
    parameters:
    - id: Target
      type: FitnessTracker.Models.BodyweightTarget
    return:
      type: System.Threading.Tasks.Task
    content.vb: Function StoreBodyweightTarget(Target As BodyweightTarget) As Task
  overload: FitnessTracker.Data.IBodyweightStorageService.StoreBodyweightTarget*
references:
- uid: FitnessTracker.Data
  commentId: N:FitnessTracker.Data
  name: FitnessTracker.Data
  nameWithType: FitnessTracker.Data
  fullName: FitnessTracker.Data
- uid: FitnessTracker.Data.IBodyweightStorageService.GetBodyweightRecords*
  commentId: Overload:FitnessTracker.Data.IBodyweightStorageService.GetBodyweightRecords
  name: GetBodyweightRecords
  nameWithType: IBodyweightStorageService.GetBodyweightRecords
  fullName: FitnessTracker.Data.IBodyweightStorageService.GetBodyweightRecords
- uid: FitnessTracker.Models.FitnessUser
  commentId: T:FitnessTracker.Models.FitnessUser
  parent: FitnessTracker.Models
  name: FitnessUser
  nameWithType: FitnessUser
  fullName: FitnessTracker.Models.FitnessUser
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Threading.Tasks.Task{FitnessTracker.Models.BodyweightRecord[]}
  commentId: T:System.Threading.Tasks.Task{FitnessTracker.Models.BodyweightRecord[]}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<BodyweightRecord[]>
  nameWithType: Task<BodyweightRecord[]>
  fullName: System.Threading.Tasks.Task<FitnessTracker.Models.BodyweightRecord[]>
  nameWithType.vb: Task(Of BodyweightRecord())
  fullName.vb: System.Threading.Tasks.Task(Of FitnessTracker.Models.BodyweightRecord())
  name.vb: Task(Of BodyweightRecord())
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: FitnessTracker.Models.BodyweightRecord
    name: BodyweightRecord
    nameWithType: BodyweightRecord
    fullName: FitnessTracker.Models.BodyweightRecord
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: FitnessTracker.Models.BodyweightRecord
    name: BodyweightRecord
    nameWithType: BodyweightRecord
    fullName: FitnessTracker.Models.BodyweightRecord
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: FitnessTracker.Models
  commentId: N:FitnessTracker.Models
  name: FitnessTracker.Models
  nameWithType: FitnessTracker.Models
  fullName: FitnessTracker.Models
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: FitnessTracker.Data.IBodyweightStorageService.GetBodyweightTarget*
  commentId: Overload:FitnessTracker.Data.IBodyweightStorageService.GetBodyweightTarget
  name: GetBodyweightTarget
  nameWithType: IBodyweightStorageService.GetBodyweightTarget
  fullName: FitnessTracker.Data.IBodyweightStorageService.GetBodyweightTarget
- uid: System.Threading.Tasks.Task{FitnessTracker.Models.BodyweightTarget}
  commentId: T:System.Threading.Tasks.Task{FitnessTracker.Models.BodyweightTarget}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<BodyweightTarget>
  nameWithType: Task<BodyweightTarget>
  fullName: System.Threading.Tasks.Task<FitnessTracker.Models.BodyweightTarget>
  nameWithType.vb: Task(Of BodyweightTarget)
  fullName.vb: System.Threading.Tasks.Task(Of FitnessTracker.Models.BodyweightTarget)
  name.vb: Task(Of BodyweightTarget)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: FitnessTracker.Models.BodyweightTarget
    name: BodyweightTarget
    nameWithType: BodyweightTarget
    fullName: FitnessTracker.Models.BodyweightTarget
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: FitnessTracker.Models.BodyweightTarget
    name: BodyweightTarget
    nameWithType: BodyweightTarget
    fullName: FitnessTracker.Models.BodyweightTarget
  - name: )
    nameWithType: )
    fullName: )
- uid: FitnessTracker.Data.IBodyweightStorageService.StoreBodyweightRecord*
  commentId: Overload:FitnessTracker.Data.IBodyweightStorageService.StoreBodyweightRecord
  name: StoreBodyweightRecord
  nameWithType: IBodyweightStorageService.StoreBodyweightRecord
  fullName: FitnessTracker.Data.IBodyweightStorageService.StoreBodyweightRecord
- uid: FitnessTracker.Models.BodyweightRecord
  commentId: T:FitnessTracker.Models.BodyweightRecord
  parent: FitnessTracker.Models
  name: BodyweightRecord
  nameWithType: BodyweightRecord
  fullName: FitnessTracker.Models.BodyweightRecord
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: FitnessTracker.Data.IBodyweightStorageService.StoreBodyweightRecords*
  commentId: Overload:FitnessTracker.Data.IBodyweightStorageService.StoreBodyweightRecords
  name: StoreBodyweightRecords
  nameWithType: IBodyweightStorageService.StoreBodyweightRecords
  fullName: FitnessTracker.Data.IBodyweightStorageService.StoreBodyweightRecords
- uid: System.Collections.Generic.IEnumerable{FitnessTracker.Models.BodyweightRecord}
  commentId: T:System.Collections.Generic.IEnumerable{FitnessTracker.Models.BodyweightRecord}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<BodyweightRecord>
  nameWithType: IEnumerable<BodyweightRecord>
  fullName: System.Collections.Generic.IEnumerable<FitnessTracker.Models.BodyweightRecord>
  nameWithType.vb: IEnumerable(Of BodyweightRecord)
  fullName.vb: System.Collections.Generic.IEnumerable(Of FitnessTracker.Models.BodyweightRecord)
  name.vb: IEnumerable(Of BodyweightRecord)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: FitnessTracker.Models.BodyweightRecord
    name: BodyweightRecord
    nameWithType: BodyweightRecord
    fullName: FitnessTracker.Models.BodyweightRecord
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: FitnessTracker.Models.BodyweightRecord
    name: BodyweightRecord
    nameWithType: BodyweightRecord
    fullName: FitnessTracker.Models.BodyweightRecord
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: FitnessTracker.Data.IBodyweightStorageService.DeleteExistingRecords*
  commentId: Overload:FitnessTracker.Data.IBodyweightStorageService.DeleteExistingRecords
  name: DeleteExistingRecords
  nameWithType: IBodyweightStorageService.DeleteExistingRecords
  fullName: FitnessTracker.Data.IBodyweightStorageService.DeleteExistingRecords
- uid: FitnessTracker.Data.IBodyweightStorageService.StoreBodyweightTarget*
  commentId: Overload:FitnessTracker.Data.IBodyweightStorageService.StoreBodyweightTarget
  name: StoreBodyweightTarget
  nameWithType: IBodyweightStorageService.StoreBodyweightTarget
  fullName: FitnessTracker.Data.IBodyweightStorageService.StoreBodyweightTarget
- uid: FitnessTracker.Models.BodyweightTarget
  commentId: T:FitnessTracker.Models.BodyweightTarget
  parent: FitnessTracker.Models
  name: BodyweightTarget
  nameWithType: BodyweightTarget
  fullName: FitnessTracker.Models.BodyweightTarget
