### YamlMime:ManagedReference
items:
- uid: FitnessTracker.Data.BodyweightEFStorageService
  commentId: T:FitnessTracker.Data.BodyweightEFStorageService
  id: BodyweightEFStorageService
  parent: FitnessTracker.Data
  children:
  - FitnessTracker.Data.BodyweightEFStorageService.#ctor(FitnessTracker.Data.ApplicationDbContext)
  - FitnessTracker.Data.BodyweightEFStorageService.DeleteExistingRecords(FitnessTracker.Models.FitnessUser)
  - FitnessTracker.Data.BodyweightEFStorageService.GetBodyweightRecords(FitnessTracker.Models.FitnessUser,System.Boolean)
  - FitnessTracker.Data.BodyweightEFStorageService.GetBodyweightTarget(FitnessTracker.Models.FitnessUser)
  - FitnessTracker.Data.BodyweightEFStorageService.StoreBodyweightRecord(FitnessTracker.Models.BodyweightRecord)
  - FitnessTracker.Data.BodyweightEFStorageService.StoreBodyweightRecords(System.Collections.Generic.IEnumerable{FitnessTracker.Models.BodyweightRecord})
  - FitnessTracker.Data.BodyweightEFStorageService.StoreBodyweightTarget(FitnessTracker.Models.BodyweightTarget)
  langs:
  - csharp
  - vb
  name: BodyweightEFStorageService
  nameWithType: BodyweightEFStorageService
  fullName: FitnessTracker.Data.BodyweightEFStorageService
  type: Class
  source:
    remote:
      path: Data/BodyweightEFStorageService.cs
      branch: main
      repo: https://github.com/SwarupaPedapalli/FitnessTrack.git
    id: BodyweightEFStorageService
    path: Data/BodyweightEFStorageService.cs
    startLine: 9
  assemblies:
  - FitnessTracker
  namespace: FitnessTracker.Data
  syntax:
    content: 'public class BodyweightEFStorageService : IBodyweightStorageService'
    content.vb: >-
      Public Class BodyweightEFStorageService
          Implements IBodyweightStorageService
  inheritance:
  - System.Object
  implements:
  - FitnessTracker.Data.IBodyweightStorageService
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: FitnessTracker.Data.BodyweightEFStorageService.#ctor(FitnessTracker.Data.ApplicationDbContext)
  commentId: M:FitnessTracker.Data.BodyweightEFStorageService.#ctor(FitnessTracker.Data.ApplicationDbContext)
  id: '#ctor(FitnessTracker.Data.ApplicationDbContext)'
  parent: FitnessTracker.Data.BodyweightEFStorageService
  langs:
  - csharp
  - vb
  name: BodyweightEFStorageService(ApplicationDbContext)
  nameWithType: BodyweightEFStorageService.BodyweightEFStorageService(ApplicationDbContext)
  fullName: FitnessTracker.Data.BodyweightEFStorageService.BodyweightEFStorageService(FitnessTracker.Data.ApplicationDbContext)
  type: Constructor
  source:
    remote:
      path: Data/BodyweightEFStorageService.cs
      branch: main
      repo: https://github.com/SwarupaPedapalli/FitnessTrack.git
    id: .ctor
    path: Data/BodyweightEFStorageService.cs
    startLine: 13
  assemblies:
  - FitnessTracker
  namespace: FitnessTracker.Data
  syntax:
    content: public BodyweightEFStorageService(ApplicationDbContext DBContext)
    parameters:
    - id: DBContext
      type: FitnessTracker.Data.ApplicationDbContext
    content.vb: Public Sub New(DBContext As ApplicationDbContext)
  overload: FitnessTracker.Data.BodyweightEFStorageService.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: FitnessTracker.Data.BodyweightEFStorageService.StoreBodyweightRecord(FitnessTracker.Models.BodyweightRecord)
  commentId: M:FitnessTracker.Data.BodyweightEFStorageService.StoreBodyweightRecord(FitnessTracker.Models.BodyweightRecord)
  id: StoreBodyweightRecord(FitnessTracker.Models.BodyweightRecord)
  parent: FitnessTracker.Data.BodyweightEFStorageService
  langs:
  - csharp
  - vb
  name: StoreBodyweightRecord(BodyweightRecord)
  nameWithType: BodyweightEFStorageService.StoreBodyweightRecord(BodyweightRecord)
  fullName: FitnessTracker.Data.BodyweightEFStorageService.StoreBodyweightRecord(FitnessTracker.Models.BodyweightRecord)
  type: Method
  source:
    remote:
      path: Data/BodyweightEFStorageService.cs
      branch: main
      repo: https://github.com/SwarupaPedapalli/FitnessTrack.git
    id: StoreBodyweightRecord
    path: Data/BodyweightEFStorageService.cs
    startLine: 18
  assemblies:
  - FitnessTracker
  namespace: FitnessTracker.Data
  syntax:
    content: public async Task StoreBodyweightRecord(BodyweightRecord Record)
    parameters:
    - id: Record
      type: FitnessTracker.Models.BodyweightRecord
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Function StoreBodyweightRecord(Record As BodyweightRecord) As Task
  overload: FitnessTracker.Data.BodyweightEFStorageService.StoreBodyweightRecord*
  implements:
  - FitnessTracker.Data.IBodyweightStorageService.StoreBodyweightRecord(FitnessTracker.Models.BodyweightRecord)
  modifiers.csharp:
  - public
  - async
  modifiers.vb:
  - Public
- uid: FitnessTracker.Data.BodyweightEFStorageService.StoreBodyweightRecords(System.Collections.Generic.IEnumerable{FitnessTracker.Models.BodyweightRecord})
  commentId: M:FitnessTracker.Data.BodyweightEFStorageService.StoreBodyweightRecords(System.Collections.Generic.IEnumerable{FitnessTracker.Models.BodyweightRecord})
  id: StoreBodyweightRecords(System.Collections.Generic.IEnumerable{FitnessTracker.Models.BodyweightRecord})
  parent: FitnessTracker.Data.BodyweightEFStorageService
  langs:
  - csharp
  - vb
  name: StoreBodyweightRecords(IEnumerable<BodyweightRecord>)
  nameWithType: BodyweightEFStorageService.StoreBodyweightRecords(IEnumerable<BodyweightRecord>)
  fullName: FitnessTracker.Data.BodyweightEFStorageService.StoreBodyweightRecords(System.Collections.Generic.IEnumerable<FitnessTracker.Models.BodyweightRecord>)
  type: Method
  source:
    remote:
      path: Data/BodyweightEFStorageService.cs
      branch: main
      repo: https://github.com/SwarupaPedapalli/FitnessTrack.git
    id: StoreBodyweightRecords
    path: Data/BodyweightEFStorageService.cs
    startLine: 24
  assemblies:
  - FitnessTracker
  namespace: FitnessTracker.Data
  syntax:
    content: public async Task StoreBodyweightRecords(IEnumerable<BodyweightRecord> Records)
    parameters:
    - id: Records
      type: System.Collections.Generic.IEnumerable{FitnessTracker.Models.BodyweightRecord}
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Function StoreBodyweightRecords(Records As IEnumerable(Of BodyweightRecord)) As Task
  overload: FitnessTracker.Data.BodyweightEFStorageService.StoreBodyweightRecords*
  implements:
  - FitnessTracker.Data.IBodyweightStorageService.StoreBodyweightRecords(System.Collections.Generic.IEnumerable{FitnessTracker.Models.BodyweightRecord})
  nameWithType.vb: BodyweightEFStorageService.StoreBodyweightRecords(IEnumerable(Of BodyweightRecord))
  modifiers.csharp:
  - public
  - async
  modifiers.vb:
  - Public
  fullName.vb: FitnessTracker.Data.BodyweightEFStorageService.StoreBodyweightRecords(System.Collections.Generic.IEnumerable(Of FitnessTracker.Models.BodyweightRecord))
  name.vb: StoreBodyweightRecords(IEnumerable(Of BodyweightRecord))
- uid: FitnessTracker.Data.BodyweightEFStorageService.GetBodyweightRecords(FitnessTracker.Models.FitnessUser,System.Boolean)
  commentId: M:FitnessTracker.Data.BodyweightEFStorageService.GetBodyweightRecords(FitnessTracker.Models.FitnessUser,System.Boolean)
  id: GetBodyweightRecords(FitnessTracker.Models.FitnessUser,System.Boolean)
  parent: FitnessTracker.Data.BodyweightEFStorageService
  langs:
  - csharp
  - vb
  name: GetBodyweightRecords(FitnessUser, Boolean)
  nameWithType: BodyweightEFStorageService.GetBodyweightRecords(FitnessUser, Boolean)
  fullName: FitnessTracker.Data.BodyweightEFStorageService.GetBodyweightRecords(FitnessTracker.Models.FitnessUser, System.Boolean)
  type: Method
  source:
    remote:
      path: Data/BodyweightEFStorageService.cs
      branch: main
      repo: https://github.com/SwarupaPedapalli/FitnessTrack.git
    id: GetBodyweightRecords
    path: Data/BodyweightEFStorageService.cs
    startLine: 30
  assemblies:
  - FitnessTracker
  namespace: FitnessTracker.Data
  syntax:
    content: public async Task<BodyweightRecord[]> GetBodyweightRecords(FitnessUser User, bool AscendingOrder = false)
    parameters:
    - id: User
      type: FitnessTracker.Models.FitnessUser
    - id: AscendingOrder
      type: System.Boolean
    return:
      type: System.Threading.Tasks.Task{FitnessTracker.Models.BodyweightRecord[]}
    content.vb: Public Function GetBodyweightRecords(User As FitnessUser, AscendingOrder As Boolean = False) As Task(Of BodyweightRecord())
  overload: FitnessTracker.Data.BodyweightEFStorageService.GetBodyweightRecords*
  implements:
  - FitnessTracker.Data.IBodyweightStorageService.GetBodyweightRecords(FitnessTracker.Models.FitnessUser,System.Boolean)
  modifiers.csharp:
  - public
  - async
  modifiers.vb:
  - Public
- uid: FitnessTracker.Data.BodyweightEFStorageService.GetBodyweightTarget(FitnessTracker.Models.FitnessUser)
  commentId: M:FitnessTracker.Data.BodyweightEFStorageService.GetBodyweightTarget(FitnessTracker.Models.FitnessUser)
  id: GetBodyweightTarget(FitnessTracker.Models.FitnessUser)
  parent: FitnessTracker.Data.BodyweightEFStorageService
  langs:
  - csharp
  - vb
  name: GetBodyweightTarget(FitnessUser)
  nameWithType: BodyweightEFStorageService.GetBodyweightTarget(FitnessUser)
  fullName: FitnessTracker.Data.BodyweightEFStorageService.GetBodyweightTarget(FitnessTracker.Models.FitnessUser)
  type: Method
  source:
    remote:
      path: Data/BodyweightEFStorageService.cs
      branch: main
      repo: https://github.com/SwarupaPedapalli/FitnessTrack.git
    id: GetBodyweightTarget
    path: Data/BodyweightEFStorageService.cs
    startLine: 52
  assemblies:
  - FitnessTracker
  namespace: FitnessTracker.Data
  syntax:
    content: public async Task<BodyweightTarget> GetBodyweightTarget(FitnessUser User)
    parameters:
    - id: User
      type: FitnessTracker.Models.FitnessUser
    return:
      type: System.Threading.Tasks.Task{FitnessTracker.Models.BodyweightTarget}
    content.vb: Public Function GetBodyweightTarget(User As FitnessUser) As Task(Of BodyweightTarget)
  overload: FitnessTracker.Data.BodyweightEFStorageService.GetBodyweightTarget*
  implements:
  - FitnessTracker.Data.IBodyweightStorageService.GetBodyweightTarget(FitnessTracker.Models.FitnessUser)
  modifiers.csharp:
  - public
  - async
  modifiers.vb:
  - Public
- uid: FitnessTracker.Data.BodyweightEFStorageService.DeleteExistingRecords(FitnessTracker.Models.FitnessUser)
  commentId: M:FitnessTracker.Data.BodyweightEFStorageService.DeleteExistingRecords(FitnessTracker.Models.FitnessUser)
  id: DeleteExistingRecords(FitnessTracker.Models.FitnessUser)
  parent: FitnessTracker.Data.BodyweightEFStorageService
  langs:
  - csharp
  - vb
  name: DeleteExistingRecords(FitnessUser)
  nameWithType: BodyweightEFStorageService.DeleteExistingRecords(FitnessUser)
  fullName: FitnessTracker.Data.BodyweightEFStorageService.DeleteExistingRecords(FitnessTracker.Models.FitnessUser)
  type: Method
  source:
    remote:
      path: Data/BodyweightEFStorageService.cs
      branch: main
      repo: https://github.com/SwarupaPedapalli/FitnessTrack.git
    id: DeleteExistingRecords
    path: Data/BodyweightEFStorageService.cs
    startLine: 60
  assemblies:
  - FitnessTracker
  namespace: FitnessTracker.Data
  syntax:
    content: public async Task DeleteExistingRecords(FitnessUser User)
    parameters:
    - id: User
      type: FitnessTracker.Models.FitnessUser
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Function DeleteExistingRecords(User As FitnessUser) As Task
  overload: FitnessTracker.Data.BodyweightEFStorageService.DeleteExistingRecords*
  implements:
  - FitnessTracker.Data.IBodyweightStorageService.DeleteExistingRecords(FitnessTracker.Models.FitnessUser)
  modifiers.csharp:
  - public
  - async
  modifiers.vb:
  - Public
- uid: FitnessTracker.Data.BodyweightEFStorageService.StoreBodyweightTarget(FitnessTracker.Models.BodyweightTarget)
  commentId: M:FitnessTracker.Data.BodyweightEFStorageService.StoreBodyweightTarget(FitnessTracker.Models.BodyweightTarget)
  id: StoreBodyweightTarget(FitnessTracker.Models.BodyweightTarget)
  parent: FitnessTracker.Data.BodyweightEFStorageService
  langs:
  - csharp
  - vb
  name: StoreBodyweightTarget(BodyweightTarget)
  nameWithType: BodyweightEFStorageService.StoreBodyweightTarget(BodyweightTarget)
  fullName: FitnessTracker.Data.BodyweightEFStorageService.StoreBodyweightTarget(FitnessTracker.Models.BodyweightTarget)
  type: Method
  source:
    remote:
      path: Data/BodyweightEFStorageService.cs
      branch: main
      repo: https://github.com/SwarupaPedapalli/FitnessTrack.git
    id: StoreBodyweightTarget
    path: Data/BodyweightEFStorageService.cs
    startLine: 67
  assemblies:
  - FitnessTracker
  namespace: FitnessTracker.Data
  syntax:
    content: public async Task StoreBodyweightTarget(BodyweightTarget Target)
    parameters:
    - id: Target
      type: FitnessTracker.Models.BodyweightTarget
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Function StoreBodyweightTarget(Target As BodyweightTarget) As Task
  overload: FitnessTracker.Data.BodyweightEFStorageService.StoreBodyweightTarget*
  implements:
  - FitnessTracker.Data.IBodyweightStorageService.StoreBodyweightTarget(FitnessTracker.Models.BodyweightTarget)
  modifiers.csharp:
  - public
  - async
  modifiers.vb:
  - Public
references:
- uid: FitnessTracker.Data
  commentId: N:FitnessTracker.Data
  name: FitnessTracker.Data
  nameWithType: FitnessTracker.Data
  fullName: FitnessTracker.Data
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: FitnessTracker.Data.IBodyweightStorageService
  commentId: T:FitnessTracker.Data.IBodyweightStorageService
  parent: FitnessTracker.Data
  name: IBodyweightStorageService
  nameWithType: IBodyweightStorageService
  fullName: FitnessTracker.Data.IBodyweightStorageService
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: FitnessTracker.Data.BodyweightEFStorageService.#ctor*
  commentId: Overload:FitnessTracker.Data.BodyweightEFStorageService.#ctor
  name: BodyweightEFStorageService
  nameWithType: BodyweightEFStorageService.BodyweightEFStorageService
  fullName: FitnessTracker.Data.BodyweightEFStorageService.BodyweightEFStorageService
- uid: FitnessTracker.Data.ApplicationDbContext
  commentId: T:FitnessTracker.Data.ApplicationDbContext
  parent: FitnessTracker.Data
  name: ApplicationDbContext
  nameWithType: ApplicationDbContext
  fullName: FitnessTracker.Data.ApplicationDbContext
- uid: FitnessTracker.Data.BodyweightEFStorageService.StoreBodyweightRecord*
  commentId: Overload:FitnessTracker.Data.BodyweightEFStorageService.StoreBodyweightRecord
  name: StoreBodyweightRecord
  nameWithType: BodyweightEFStorageService.StoreBodyweightRecord
  fullName: FitnessTracker.Data.BodyweightEFStorageService.StoreBodyweightRecord
- uid: FitnessTracker.Data.IBodyweightStorageService.StoreBodyweightRecord(FitnessTracker.Models.BodyweightRecord)
  commentId: M:FitnessTracker.Data.IBodyweightStorageService.StoreBodyweightRecord(FitnessTracker.Models.BodyweightRecord)
  parent: FitnessTracker.Data.IBodyweightStorageService
  name: StoreBodyweightRecord(BodyweightRecord)
  nameWithType: IBodyweightStorageService.StoreBodyweightRecord(BodyweightRecord)
  fullName: FitnessTracker.Data.IBodyweightStorageService.StoreBodyweightRecord(FitnessTracker.Models.BodyweightRecord)
  spec.csharp:
  - uid: FitnessTracker.Data.IBodyweightStorageService.StoreBodyweightRecord(FitnessTracker.Models.BodyweightRecord)
    name: StoreBodyweightRecord
    nameWithType: IBodyweightStorageService.StoreBodyweightRecord
    fullName: FitnessTracker.Data.IBodyweightStorageService.StoreBodyweightRecord
  - name: (
    nameWithType: (
    fullName: (
  - uid: FitnessTracker.Models.BodyweightRecord
    name: BodyweightRecord
    nameWithType: BodyweightRecord
    fullName: FitnessTracker.Models.BodyweightRecord
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FitnessTracker.Data.IBodyweightStorageService.StoreBodyweightRecord(FitnessTracker.Models.BodyweightRecord)
    name: StoreBodyweightRecord
    nameWithType: IBodyweightStorageService.StoreBodyweightRecord
    fullName: FitnessTracker.Data.IBodyweightStorageService.StoreBodyweightRecord
  - name: (
    nameWithType: (
    fullName: (
  - uid: FitnessTracker.Models.BodyweightRecord
    name: BodyweightRecord
    nameWithType: BodyweightRecord
    fullName: FitnessTracker.Models.BodyweightRecord
  - name: )
    nameWithType: )
    fullName: )
- uid: FitnessTracker.Models.BodyweightRecord
  commentId: T:FitnessTracker.Models.BodyweightRecord
  parent: FitnessTracker.Models
  name: BodyweightRecord
  nameWithType: BodyweightRecord
  fullName: FitnessTracker.Models.BodyweightRecord
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: FitnessTracker.Models
  commentId: N:FitnessTracker.Models
  name: FitnessTracker.Models
  nameWithType: FitnessTracker.Models
  fullName: FitnessTracker.Models
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: FitnessTracker.Data.BodyweightEFStorageService.StoreBodyweightRecords*
  commentId: Overload:FitnessTracker.Data.BodyweightEFStorageService.StoreBodyweightRecords
  name: StoreBodyweightRecords
  nameWithType: BodyweightEFStorageService.StoreBodyweightRecords
  fullName: FitnessTracker.Data.BodyweightEFStorageService.StoreBodyweightRecords
- uid: FitnessTracker.Data.IBodyweightStorageService.StoreBodyweightRecords(System.Collections.Generic.IEnumerable{FitnessTracker.Models.BodyweightRecord})
  commentId: M:FitnessTracker.Data.IBodyweightStorageService.StoreBodyweightRecords(System.Collections.Generic.IEnumerable{FitnessTracker.Models.BodyweightRecord})
  parent: FitnessTracker.Data.IBodyweightStorageService
  isExternal: true
  name: StoreBodyweightRecords(IEnumerable<BodyweightRecord>)
  nameWithType: IBodyweightStorageService.StoreBodyweightRecords(IEnumerable<BodyweightRecord>)
  fullName: FitnessTracker.Data.IBodyweightStorageService.StoreBodyweightRecords(System.Collections.Generic.IEnumerable<FitnessTracker.Models.BodyweightRecord>)
  nameWithType.vb: IBodyweightStorageService.StoreBodyweightRecords(IEnumerable(Of BodyweightRecord))
  fullName.vb: FitnessTracker.Data.IBodyweightStorageService.StoreBodyweightRecords(System.Collections.Generic.IEnumerable(Of FitnessTracker.Models.BodyweightRecord))
  name.vb: StoreBodyweightRecords(IEnumerable(Of BodyweightRecord))
  spec.csharp:
  - uid: FitnessTracker.Data.IBodyweightStorageService.StoreBodyweightRecords(System.Collections.Generic.IEnumerable{FitnessTracker.Models.BodyweightRecord})
    name: StoreBodyweightRecords
    nameWithType: IBodyweightStorageService.StoreBodyweightRecords
    fullName: FitnessTracker.Data.IBodyweightStorageService.StoreBodyweightRecords
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: FitnessTracker.Models.BodyweightRecord
    name: BodyweightRecord
    nameWithType: BodyweightRecord
    fullName: FitnessTracker.Models.BodyweightRecord
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FitnessTracker.Data.IBodyweightStorageService.StoreBodyweightRecords(System.Collections.Generic.IEnumerable{FitnessTracker.Models.BodyweightRecord})
    name: StoreBodyweightRecords
    nameWithType: IBodyweightStorageService.StoreBodyweightRecords
    fullName: FitnessTracker.Data.IBodyweightStorageService.StoreBodyweightRecords
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: FitnessTracker.Models.BodyweightRecord
    name: BodyweightRecord
    nameWithType: BodyweightRecord
    fullName: FitnessTracker.Models.BodyweightRecord
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable{FitnessTracker.Models.BodyweightRecord}
  commentId: T:System.Collections.Generic.IEnumerable{FitnessTracker.Models.BodyweightRecord}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<BodyweightRecord>
  nameWithType: IEnumerable<BodyweightRecord>
  fullName: System.Collections.Generic.IEnumerable<FitnessTracker.Models.BodyweightRecord>
  nameWithType.vb: IEnumerable(Of BodyweightRecord)
  fullName.vb: System.Collections.Generic.IEnumerable(Of FitnessTracker.Models.BodyweightRecord)
  name.vb: IEnumerable(Of BodyweightRecord)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: FitnessTracker.Models.BodyweightRecord
    name: BodyweightRecord
    nameWithType: BodyweightRecord
    fullName: FitnessTracker.Models.BodyweightRecord
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: FitnessTracker.Models.BodyweightRecord
    name: BodyweightRecord
    nameWithType: BodyweightRecord
    fullName: FitnessTracker.Models.BodyweightRecord
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: FitnessTracker.Data.BodyweightEFStorageService.GetBodyweightRecords*
  commentId: Overload:FitnessTracker.Data.BodyweightEFStorageService.GetBodyweightRecords
  name: GetBodyweightRecords
  nameWithType: BodyweightEFStorageService.GetBodyweightRecords
  fullName: FitnessTracker.Data.BodyweightEFStorageService.GetBodyweightRecords
- uid: FitnessTracker.Data.IBodyweightStorageService.GetBodyweightRecords(FitnessTracker.Models.FitnessUser,System.Boolean)
  commentId: M:FitnessTracker.Data.IBodyweightStorageService.GetBodyweightRecords(FitnessTracker.Models.FitnessUser,System.Boolean)
  parent: FitnessTracker.Data.IBodyweightStorageService
  isExternal: true
  name: GetBodyweightRecords(FitnessUser, Boolean)
  nameWithType: IBodyweightStorageService.GetBodyweightRecords(FitnessUser, Boolean)
  fullName: FitnessTracker.Data.IBodyweightStorageService.GetBodyweightRecords(FitnessTracker.Models.FitnessUser, System.Boolean)
  spec.csharp:
  - uid: FitnessTracker.Data.IBodyweightStorageService.GetBodyweightRecords(FitnessTracker.Models.FitnessUser,System.Boolean)
    name: GetBodyweightRecords
    nameWithType: IBodyweightStorageService.GetBodyweightRecords
    fullName: FitnessTracker.Data.IBodyweightStorageService.GetBodyweightRecords
  - name: (
    nameWithType: (
    fullName: (
  - uid: FitnessTracker.Models.FitnessUser
    name: FitnessUser
    nameWithType: FitnessUser
    fullName: FitnessTracker.Models.FitnessUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FitnessTracker.Data.IBodyweightStorageService.GetBodyweightRecords(FitnessTracker.Models.FitnessUser,System.Boolean)
    name: GetBodyweightRecords
    nameWithType: IBodyweightStorageService.GetBodyweightRecords
    fullName: FitnessTracker.Data.IBodyweightStorageService.GetBodyweightRecords
  - name: (
    nameWithType: (
    fullName: (
  - uid: FitnessTracker.Models.FitnessUser
    name: FitnessUser
    nameWithType: FitnessUser
    fullName: FitnessTracker.Models.FitnessUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: FitnessTracker.Models.FitnessUser
  commentId: T:FitnessTracker.Models.FitnessUser
  parent: FitnessTracker.Models
  name: FitnessUser
  nameWithType: FitnessUser
  fullName: FitnessTracker.Models.FitnessUser
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Threading.Tasks.Task{FitnessTracker.Models.BodyweightRecord[]}
  commentId: T:System.Threading.Tasks.Task{FitnessTracker.Models.BodyweightRecord[]}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<BodyweightRecord[]>
  nameWithType: Task<BodyweightRecord[]>
  fullName: System.Threading.Tasks.Task<FitnessTracker.Models.BodyweightRecord[]>
  nameWithType.vb: Task(Of BodyweightRecord())
  fullName.vb: System.Threading.Tasks.Task(Of FitnessTracker.Models.BodyweightRecord())
  name.vb: Task(Of BodyweightRecord())
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: FitnessTracker.Models.BodyweightRecord
    name: BodyweightRecord
    nameWithType: BodyweightRecord
    fullName: FitnessTracker.Models.BodyweightRecord
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: FitnessTracker.Models.BodyweightRecord
    name: BodyweightRecord
    nameWithType: BodyweightRecord
    fullName: FitnessTracker.Models.BodyweightRecord
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: FitnessTracker.Data.BodyweightEFStorageService.GetBodyweightTarget*
  commentId: Overload:FitnessTracker.Data.BodyweightEFStorageService.GetBodyweightTarget
  name: GetBodyweightTarget
  nameWithType: BodyweightEFStorageService.GetBodyweightTarget
  fullName: FitnessTracker.Data.BodyweightEFStorageService.GetBodyweightTarget
- uid: FitnessTracker.Data.IBodyweightStorageService.GetBodyweightTarget(FitnessTracker.Models.FitnessUser)
  commentId: M:FitnessTracker.Data.IBodyweightStorageService.GetBodyweightTarget(FitnessTracker.Models.FitnessUser)
  parent: FitnessTracker.Data.IBodyweightStorageService
  name: GetBodyweightTarget(FitnessUser)
  nameWithType: IBodyweightStorageService.GetBodyweightTarget(FitnessUser)
  fullName: FitnessTracker.Data.IBodyweightStorageService.GetBodyweightTarget(FitnessTracker.Models.FitnessUser)
  spec.csharp:
  - uid: FitnessTracker.Data.IBodyweightStorageService.GetBodyweightTarget(FitnessTracker.Models.FitnessUser)
    name: GetBodyweightTarget
    nameWithType: IBodyweightStorageService.GetBodyweightTarget
    fullName: FitnessTracker.Data.IBodyweightStorageService.GetBodyweightTarget
  - name: (
    nameWithType: (
    fullName: (
  - uid: FitnessTracker.Models.FitnessUser
    name: FitnessUser
    nameWithType: FitnessUser
    fullName: FitnessTracker.Models.FitnessUser
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FitnessTracker.Data.IBodyweightStorageService.GetBodyweightTarget(FitnessTracker.Models.FitnessUser)
    name: GetBodyweightTarget
    nameWithType: IBodyweightStorageService.GetBodyweightTarget
    fullName: FitnessTracker.Data.IBodyweightStorageService.GetBodyweightTarget
  - name: (
    nameWithType: (
    fullName: (
  - uid: FitnessTracker.Models.FitnessUser
    name: FitnessUser
    nameWithType: FitnessUser
    fullName: FitnessTracker.Models.FitnessUser
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task{FitnessTracker.Models.BodyweightTarget}
  commentId: T:System.Threading.Tasks.Task{FitnessTracker.Models.BodyweightTarget}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<BodyweightTarget>
  nameWithType: Task<BodyweightTarget>
  fullName: System.Threading.Tasks.Task<FitnessTracker.Models.BodyweightTarget>
  nameWithType.vb: Task(Of BodyweightTarget)
  fullName.vb: System.Threading.Tasks.Task(Of FitnessTracker.Models.BodyweightTarget)
  name.vb: Task(Of BodyweightTarget)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: FitnessTracker.Models.BodyweightTarget
    name: BodyweightTarget
    nameWithType: BodyweightTarget
    fullName: FitnessTracker.Models.BodyweightTarget
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: FitnessTracker.Models.BodyweightTarget
    name: BodyweightTarget
    nameWithType: BodyweightTarget
    fullName: FitnessTracker.Models.BodyweightTarget
  - name: )
    nameWithType: )
    fullName: )
- uid: FitnessTracker.Data.BodyweightEFStorageService.DeleteExistingRecords*
  commentId: Overload:FitnessTracker.Data.BodyweightEFStorageService.DeleteExistingRecords
  name: DeleteExistingRecords
  nameWithType: BodyweightEFStorageService.DeleteExistingRecords
  fullName: FitnessTracker.Data.BodyweightEFStorageService.DeleteExistingRecords
- uid: FitnessTracker.Data.IBodyweightStorageService.DeleteExistingRecords(FitnessTracker.Models.FitnessUser)
  commentId: M:FitnessTracker.Data.IBodyweightStorageService.DeleteExistingRecords(FitnessTracker.Models.FitnessUser)
  parent: FitnessTracker.Data.IBodyweightStorageService
  name: DeleteExistingRecords(FitnessUser)
  nameWithType: IBodyweightStorageService.DeleteExistingRecords(FitnessUser)
  fullName: FitnessTracker.Data.IBodyweightStorageService.DeleteExistingRecords(FitnessTracker.Models.FitnessUser)
  spec.csharp:
  - uid: FitnessTracker.Data.IBodyweightStorageService.DeleteExistingRecords(FitnessTracker.Models.FitnessUser)
    name: DeleteExistingRecords
    nameWithType: IBodyweightStorageService.DeleteExistingRecords
    fullName: FitnessTracker.Data.IBodyweightStorageService.DeleteExistingRecords
  - name: (
    nameWithType: (
    fullName: (
  - uid: FitnessTracker.Models.FitnessUser
    name: FitnessUser
    nameWithType: FitnessUser
    fullName: FitnessTracker.Models.FitnessUser
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FitnessTracker.Data.IBodyweightStorageService.DeleteExistingRecords(FitnessTracker.Models.FitnessUser)
    name: DeleteExistingRecords
    nameWithType: IBodyweightStorageService.DeleteExistingRecords
    fullName: FitnessTracker.Data.IBodyweightStorageService.DeleteExistingRecords
  - name: (
    nameWithType: (
    fullName: (
  - uid: FitnessTracker.Models.FitnessUser
    name: FitnessUser
    nameWithType: FitnessUser
    fullName: FitnessTracker.Models.FitnessUser
  - name: )
    nameWithType: )
    fullName: )
- uid: FitnessTracker.Data.BodyweightEFStorageService.StoreBodyweightTarget*
  commentId: Overload:FitnessTracker.Data.BodyweightEFStorageService.StoreBodyweightTarget
  name: StoreBodyweightTarget
  nameWithType: BodyweightEFStorageService.StoreBodyweightTarget
  fullName: FitnessTracker.Data.BodyweightEFStorageService.StoreBodyweightTarget
- uid: FitnessTracker.Data.IBodyweightStorageService.StoreBodyweightTarget(FitnessTracker.Models.BodyweightTarget)
  commentId: M:FitnessTracker.Data.IBodyweightStorageService.StoreBodyweightTarget(FitnessTracker.Models.BodyweightTarget)
  parent: FitnessTracker.Data.IBodyweightStorageService
  name: StoreBodyweightTarget(BodyweightTarget)
  nameWithType: IBodyweightStorageService.StoreBodyweightTarget(BodyweightTarget)
  fullName: FitnessTracker.Data.IBodyweightStorageService.StoreBodyweightTarget(FitnessTracker.Models.BodyweightTarget)
  spec.csharp:
  - uid: FitnessTracker.Data.IBodyweightStorageService.StoreBodyweightTarget(FitnessTracker.Models.BodyweightTarget)
    name: StoreBodyweightTarget
    nameWithType: IBodyweightStorageService.StoreBodyweightTarget
    fullName: FitnessTracker.Data.IBodyweightStorageService.StoreBodyweightTarget
  - name: (
    nameWithType: (
    fullName: (
  - uid: FitnessTracker.Models.BodyweightTarget
    name: BodyweightTarget
    nameWithType: BodyweightTarget
    fullName: FitnessTracker.Models.BodyweightTarget
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FitnessTracker.Data.IBodyweightStorageService.StoreBodyweightTarget(FitnessTracker.Models.BodyweightTarget)
    name: StoreBodyweightTarget
    nameWithType: IBodyweightStorageService.StoreBodyweightTarget
    fullName: FitnessTracker.Data.IBodyweightStorageService.StoreBodyweightTarget
  - name: (
    nameWithType: (
    fullName: (
  - uid: FitnessTracker.Models.BodyweightTarget
    name: BodyweightTarget
    nameWithType: BodyweightTarget
    fullName: FitnessTracker.Models.BodyweightTarget
  - name: )
    nameWithType: )
    fullName: )
- uid: FitnessTracker.Models.BodyweightTarget
  commentId: T:FitnessTracker.Models.BodyweightTarget
  parent: FitnessTracker.Models
  name: BodyweightTarget
  nameWithType: BodyweightTarget
  fullName: FitnessTracker.Models.BodyweightTarget
